<project name="pdf-generator"
         basedir="."
         default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant"
         xmlns:jacoco="antlib:org.jacoco.ant">

  <property file="build.properties"/>

  <property name="build-dir" location="${basedir}/.build"/>
  <property name="distr-dir" location="${build-dir}/distr"/>

  <property name="src-dir" location="${basedir}/src/main/java"/>

  <property name="test-src" location="${basedir}/src/test/java"/>
  <property name="test-res" location="${basedir}/src/test/resources"/>

  <property name="report-dir" location="${build-dir}/report"/>
  <property name="jacoco-report" location="${build-dir}/jacoco.exec"/>

  <condition property="resolver" value="eyeline" else="snapshot">
    <isset property="JENKINS_VERSION"/>
  </condition>

  <tstamp>
    <format property="build-date" pattern="yyyy-MM-dd HH:mm:ss" />
  </tstamp>

  <target name="clean">
    <delete dir="${build-dir}"/>
  </target>

  <target name="resolve">
    <ivy:settings file="${user.home}/.ivy2/ivysettings.xml"/>
    <ivy:resolve transitive="true"/>

    <delete dir="${build-dir}/lib" failonerror="false"/>
    <mkdir dir="${build-dir}/lib"/>

    <delete dir="${build-dir}/libdev" failonerror="false"/>
    <mkdir dir="${build-dir}/libdev"/>

    <ivy:retrieve pattern="${build-dir}/lib/[artifact]-[revision].[ext]" type="jar,bundle" conf="runtime"/>
    <ivy:retrieve pattern="${build-dir}/libdev/[artifact]-[revision].[ext]" type="jar,bundle" conf="test"/>

    <mkdir dir="${report-dir}/ivy"/>
    <ivy:report todir="${report-dir}/ivy" graph="true"/>
  </target>

  <path id="classpath">
    <fileset dir="${build-dir}/lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="test-classpath">
    <fileset dir="${build-dir}/libdev">
      <include name="**/*.jar"/>
    </fileset>

    <pathelement location="${test-src}"/>
    <pathelement location="${test-res}"/>
  </path>

  <target name="build" depends="clean, resolve">
    <mkdir dir="${build-dir}/out"/>

    <javac destdir="${build-dir}/out"
           encoding="UTF-8"
           includeantruntime="false"
           debug="true"
           source="1.6"
           target="1.6"
           fork="true">

      <src path="${src-dir}"/>
      <classpath refid="classpath"/>

    </javac>
  </target>

  <target name="jar" depends="build">
    <mkdir dir="${distr-dir}"/>
    <jar destfile="${distr-dir}/${module-name}-${release-version}.jar">
      <manifest>
        <attribute name="Module" value="${module-name}"/>
        <attribute name="Vendor" value="Eyeline Communications"/>
        <attribute name="Release-Version" value="${release-version}"/>
        <attribute name="Build-Date" value="${build-date}"/>
      </manifest>
      <fileset dir="${build-dir}/out" includes="**/*"/>
    </jar>
  </target>

  <target name="distr" depends="jar, test">
    <ivy:publish resolver="${resolver}" pubrevision="${release-version}" overwrite="true" conf="runtime">
      <artifacts pattern=".build/distr/[artifact]-[revision].[ext]"/>
    </ivy:publish>
  </target>

  <target name="compile-test" depends="build">
    <mkdir dir="${build-dir}/test"/>

    <javac destdir="${build-dir}/test"
           encoding="UTF-8"
           includeantruntime="false"
           fork="true"
           debug="true"
           source="1.6"
           target="1.6">

      <src path="${test-src}"/>

      <classpath refid="test-classpath"/>
      <classpath path="${build-dir}/out"/>

    </javac>
  </target>

  <target name="test" description="Execute unit tests" depends="compile-test" unless="skip.tests">

    <mkdir dir="${report-dir}/tmp/test"/>
    <mkdir dir="${report-dir}/junit"/>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath refid="test-classpath"/>
    </taskdef>

    <jacoco:coverage destfile="${jacoco-report}">
      <junit printsummary="true"
             failureproperty="junit.failure"
             fork="true"
             forkmode="once"
             dir="${build-dir}"
             includeantruntime="false">
        <classpath>
          <pathelement location="${build-dir}/out"/>
          <pathelement location="${build-dir}/test"/>
        </classpath>

        <classpath refid="classpath"/>
        <classpath refid="test-classpath"/>

        <batchtest todir="${report-dir}/tmp/test">
          <fileset dir="${test-src}">
            <include name="**/*Test.java"/>
            <!-- a '$' in the filename means it's an inner class -->
            <exclude name="**/*$*"/>
          </fileset>

          <formatter type="xml"/>
        </batchtest>
      </junit>
    </jacoco:coverage>

    <junitreport todir="${report-dir}/tmp">
      <fileset dir="${report-dir}/tmp/test"/>
      <report todir="${report-dir}/junit"/>
    </junitreport>

    <jacoco:report>
      <executiondata>
        <file file="${jacoco-report}"/>
      </executiondata>

      <structure name="${module-name}">
        <classfiles>
          <fileset dir="${build-dir}/out"/>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="${src-dir}"/>
        </sourcefiles>
      </structure>

      <html destdir="${build-dir}/coverage"/>
      <xml destfile="${build-dir}/coverage/report.xml"/>

    </jacoco:report>

    <fail if="junit.failure" message="Unit test(s) failed. See reports!"/>
  </target>

</project>